name: 📥 Download & CSV/HTML mit Pausen

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # stündlich

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
      # =========================
      # BLOCK 1: ICS herunterladen
      # =========================
      - name: 📥 Repository klonen (mit Schreibzugriff)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: 🧹 Ordner csv_Baskets leeren (wenn vorhanden)
        run: |
          mkdir -p csv_Baskets
          rm -f csv_Baskets/*

      - name: 🌐 Baskets-Kalender (ICS) herunterladen
        run: curl -L "https://api.2basketballbundesliga.de/cal/562" --output csv_Baskets/Baskets_2526.ics

      - name: 🌐 Preußen Münster-Kalender (ICS) herunterladen
        run: curl -L "http://i.cal.to/ical/7477/bundesliga/sc-preussen-muenster/7dc6da48.a8ea1dd5-20526fdc.ics" --output csv_Baskets/Preussen_2526.ics

      - name: 🔁 Commit und Push der ICS-Dateien
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add -A csv_Baskets
          git commit -m "📥 ICS-Dateien (Baskets & Preußen) aktualisiert" || echo "nichts zu committen"
          git pull --rebase
          git push

      - name: ⏱️ Pause (30s) nach ICS-Download
        run: sleep 30

      # ==================================
      # ENV/Deps einmalig für Python-Skripte
      # ==================================
      - name: 🐍 Python einrichten
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 📦 Abhängigkeiten installieren
        run: pip install pandas pytz

      # ===========================================
      # BLOCK 2: Volleyball-CSV-Paket herunterladen
      # ===========================================
      - name: 📁 Verzeichnis csvdata anlegen
        run: mkdir -p csvdata

      - name: 🌐 CSV-Dateien herunterladen mit fester Umbenennung
        run: |
          cd csvdata
          rm -f *.csv
          urls=(
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95239897"
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95244340"
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95243632"
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95245637"
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95245654"
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95251101"
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95251080"
            "https://www.volleyball-bundesliga.de/servlet/league/PlayingScheduleCsvExport?matchSeriesId=776311171"
            "https://www.volleyball-bundesliga.de/servlet/league/PlayingScheduleCsvExport?matchSeriesId=776309163"
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95245226"
            "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95250874"
          )
          for url in "${urls[@]}"; do
            curl -L -OJ "$url"
          done
          curl -L "https://ergebnisdienst.volleyball.nrw/servlet/league/PlayingScheduleCsvExport?matchSeriesId=95241488" \
            -o "Spielplan_Kreisliga_Muenster_Frauen.csv"

      - name: 🔁 Commit und Push CSV (csvdata)
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add csvdata/
          git diff --cached --quiet && echo "🟢 Keine Änderungen, nichts zu committen." || (
            git commit -m "📊 Automatisches CSV-Update (mit Sonderzeichen-Handling)"
            git pull --rebase
            git push
          )

      - name: ⏱️ Pause (30s) nach CSV-Downloads
        run: sleep 30


      # =================================
      # BLOCK 3: Baskets CSV aus ICS bauen
      # =================================
      - name: 🛠 CSV aus ICS erzeugen mit baskets_csv.py
        run: python baskets_csv.py

      - name: 🔁 Commit und Push der Baskets-CSV
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add csv_Baskets/Baskets_2526_Heimspiele.csv
          git commit -m "CSV aus Baskets ICS generiert" || echo "nichts zu committen"
          git pull --rebase
          git push

      - name: ⏱️ Pause (30s) nach Baskets-CSV
        run: sleep 30

      # ==================================
      # BLOCK 4: Preußen CSV aus ICS bauen
      # ==================================
      - name: 🛠 CSV aus ICS erzeugen mit preussen_csv.py
        run: python preussen_csv.py

      - name: 🔁 Commit und Push der Preußen-CSV
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add csv_Baskets/Preussen_2526_Heimspiele.csv
          git commit -m "CSV aus Preußen ICS generiert" || echo "nichts zu committen"
          git pull --rebase
          git push

      - name: ⏱️ Pause (30s) nach Preußen-CSV
        run: sleep 30

      # =====================================
      # BLOCK 5: HTML generieren & veröffentlichen
      # =====================================
      - name: 🛠 HTML mit Ergebnis generieren
        run: python usc_baskets_preussen.py
        run: python usc_spielplan.py

      - name: 🔁 Commit und Push HTML
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add docs/index_trainer.html
          git add docs/index.html
          git add docs/indexapp.html
          git commit -m "📅 HTML-Aktualisierung" || echo "nichts zu committen"
          git pull --rebase
          git push
